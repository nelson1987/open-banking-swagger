swagger: '2.0'
info:
  description: 'Swagger Spec for the Nuapay TPP OpenBanking/PSD2. Provides AISP, PISP and Banks Endpoints'
  version: 1.2.0
  title: Nuapay TPP API Specification
  contact:
    name: Nuapay
    email: api.support@nuapay.com
host: tpp.nuapay.com
basePath: /tpp
tags:
  - name: Account Information API
    description: the accounts API
  - name: BANKS
    description: the banks API
  - name: PISP
    description: the payments API
  - name: Simple-Payment
    description: the payments API for TPP-UI integration
paths:
  /account-requests:
    post:
      tags:
        - AISP
      summary: Create an account access request
      description: Create an account access request
      operationId: createAccountRequestUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: accountRequest
          description: Create an Account Request
          required: true
          schema:
            $ref: '#/definitions/AccountRequest'
        - name: x-tpp-alternative-auth
          in: header
          description: Alternative authorization key.
          required: false
          type: string
        - name: x-tpp-bank-id
          in: header
          description: The bank id uniquely identifies the bank we wish to interact with.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The time when the PSU last logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '201':
          description: Account Request resource successfully created
          headers:
            x-tpp-interaction-id:
              type: string
              description: Correlation id passed through conversation via all the actors involved.
          schema:
            $ref: '#/definitions/AccountRequestResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  '/account-requests/{accountRequestReference}':
    get:
      tags:
        - AISP
      summary: Get an account request
      description: Get an account request
      operationId: getAccountRequestUsingGET
      produces:
        - application/json
      parameters:
        - name: accountRequestReference
          in: path
          description: Unique identification as assigned by Nuapay to uniquely identify the account request resource.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The time when the PSU last logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '200':
          description: Account Request resource successfully retrieved
          headers:
            x-tpp-interaction-id:
              type: string
              description: Correlation id passed through conversation via all the actors involved.
          schema:
            $ref: '#/definitions/AccountRequestResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
    delete:
      tags:
        - AISP
      summary: Delete an account request
      description: Delete an account request
      operationId: deleteAccountRequestUsingDELETE
      produces:
        - application/json
      parameters:
        - name: accountRequestReference
          in: path
          description: Unique identification as assigned by Nuapay to uniquely identify the account request resource.
          required: true
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
      responses:
        '204':
          description: Account Request resource successfully deleted
          headers:
            x-tpp-interaction-id:
              type: string
              description: Correlation id passed through conversation via all the actors involved.
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  /accounts:
    get:
      tags:
        - AISP
      summary: Get Accounts
      description: Get a list of accounts
      operationId: getAccountsUsingGET
      produces:
        - application/json
      parameters:
        - name: x-tpp-account-request-reference
          in: header
          description: The account request reference that was associated with the account intent request.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The last login time of the customer.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '200':
          description: Accounts successfully retrieved
          headers:
            x-tpp-interaction-id:
              type: string
              description: An RFC4122 UID used as a correlation id.
          schema:
            $ref: '#/definitions/AccountsResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  '/accounts/{accountId}/balances':
    get:
      tags:
        - AISP
      summary: Get Account Balances
      description: Get Balances related to an account
      operationId: getAccountBalancesUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: A unique identifier used to identify the account resource.
          required: true
          type: string
        - name: x-tpp-account-request-reference
          in: header
          description: The account request reference that was associated with the account intent request.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The last login time of the customer.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '200':
          description: Account Balances successfully retrieved
          headers:
            x-tpp-interaction-id:
              type: string
              description: An RFC4122 UID used as a correlation id.
          schema:
            $ref: '#/definitions/AccountBalancesResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  '/accounts/{accountId}/transactions':
    get:
      tags:
        - AISP
      summary: Get Account Transactions
      description: Get transactions related to an account
      operationId: getAccountTransactionsUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: A unique identifier used to identify the account resource.
          required: true
          type: string
        - name: fromBookingTime
          in: query
          required: false
          type: string
          format: date-time
        - name: frombookingdatetime
          in: query
          description: 'The UTC ISO 8601 Date Time to filter transactions FROM  NB Time component is optional - set to 00:00:00 for just Date.   The parameter must NOT have a timezone set'
          required: false
          type: string
        - name: toBookingTime
          in: query
          required: false
          type: string
          format: date-time
        - name: tobookingdatetime
          in: query
          description: 'The UTC ISO 8601 Date Time to filter transactions TO  NB Time component is optional - set to 00:00:00 for just Date.   The parameter must NOT have a timezone set'
          required: false
          type: string
        - name: x-tpp-account-request-reference
          in: header
          description: The account request reference that was associated with the account intent request.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The last login time of the customer.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '200':
          description: Account Transactions successfully retrieved
          headers:
            x-tpp-interaction-id:
              type: string
              description: An RFC4122 UID used as a correlation id.
          schema:
            $ref: '#/definitions/AccountTransactionsResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  /banks:
    get:
      tags:
        - BANKS
      summary: Get Supported Banks
      description: Get Supported Banks On This TPP
      operationId: getBanksUsingGET
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: 'The page of results we are looking for (results per page is dynamic and bank dependant), defaults to the first page.'
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Banks successfully retrieved
          schema:
            $ref: '#/definitions/BanksResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
      security:
        - BasicAuth: []
      deprecated: false
  '/banks/{bankId}':
    get:
      tags:
        - BANKS
      summary: View  Bank
      description: View Bank Details
      operationId: getBankUsingGET
      produces:
        - application/json
      parameters:
        - name: bankId
          in: path
          description: Bank id returned by Get Supported Banks endpoint.
          required: true
          type: string
      responses:
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  /payment-requests:
    post:
      tags:
        - PISP
      summary: Make A Payment Initiation
      description: Make A Payment Initiation
      operationId: paymentInitiationUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: paymentInitiationRequest
          description: Makes A Payment Initiation
          required: true
          schema:
            $ref: '#/definitions/PaymentInitiationRequest'
        - name: x-tpp-alternative-auth
          in: header
          description: Nupay Auth - The Nuapay API Key identifier.
          required: false
          type: string
        - name: x-tpp-bank-id
          in: header
          description: The bank id uniquely identifies the bank we wish to interact with.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The last login time of the customer.
          required: false
          type: string
        - name: x-tpp-idempotency-key
          in: header
          description: Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours.
          required: true
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: 'Request Identifier in the TPP application, if not provided will be generated by the TPP application. An RFC4122 UID used as a correlation id.'
          required: false
          type: string
      responses:
        '201':
          description: Payment resource successfully created.
          headers:
            x-tpp-interaction-id:
              type: string
              description: An RFC4122 UID used as a correlation id.
          schema:
            $ref: '#/definitions/PaymentRequestResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  '/payment-requests/{tppPaymentReference}':
    get:
      tags:
        - PISP
      summary: Get Payment Status
      description: Get the payment for the provided TPPPaymentReference
      operationId: getPaymentStatusUsingGET
      produces:
        - application/json
      parameters:
        - name: tppPaymentReference
          in: path
          description: The payment reference for the merchant to check on a payment request.
          required: true
          type: string
        - name: x-tpp-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          required: false
          type: string
        - name: x-tpp-customer-last-logged-time
          in: header
          description: The last login time of the customer.
          required: false
          type: string
        - name: x-tpp-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          type: string
      responses:
        '200':
          description: Accounts successfully retrieved
          headers:
            x-tpp-interaction-id:
              type: string
              description: An RFC4122 UID used as a correlation id.
          schema:
            $ref: '#/definitions/PaymentRequestResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  /payments:
    post:
      tags:
        - Simple-Payment
      summary: Create a payment request POST endpoint
      description: Create a payment request POST endpoint
      operationId: createPaymentUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: paymentRequest
          description: Create a Payment Request
          required: true
          schema:
            $ref: '#/definitions/PaymentRequest'
        - name: x-idempotency-key
          in: header
          description: Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
      responses:
        '201':
          description: Resource successfully created
          schema:
            $ref: '#/definitions/PaymentResponseEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
  '/payments/{paymentId}':
    get:
      tags:
        - Simple-Payment
      summary: GET Payment details endpoint
      description: GET Payment details endpoint
      operationId: getUsingGET
      produces:
        - application/json
      parameters:
        - name: paymentId
          in: path
          description: The ID of the payment for which you want to retrieve details
          required: true
          type: string
      responses:
        '200':
          description: Resource successfully retrieved
          schema:
            $ref: '#/definitions/PaymentResponseEnvelope'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              type: integer
              format: int32
              description: Number in seconds to wait
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - BasicAuth: []
      deprecated: false
securityDefinitions:
  BasicAuth:
    type: basic
definitions:
  Account:
    type: object
    required:
      - accountId
      - currency
    properties:
      accountId:
        type: string
        description: A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
        minLength: 1
        maxLength: 40
      currency:
        type: string
        description: 'Identification of the currency in which the account is held.  Usage: Currency should only be used in case one and the same account number covers several currencies and the initiating party needs to identify which currency needs to be used for settlement on the account.'
        pattern: '^[A-Z]{3,3}$'
      nickname:
        type: string
        description: 'The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.'
        minLength: 1
        maxLength: 70
      account:
        $ref: '#/definitions/AccountData'
      servicer:
        $ref: '#/definitions/Servicer'
    title: Account
    description: Account
  AccountBalancesResponseEnvelope:
    type: object
    required:
      - data
      - links
      - meta
      - uri
    properties:
      uri:
        type: string
        description: Uri of the queried resource.
      data:
        type: array
        description: Account Balance collection
        items:
          $ref: '#/definitions/Balance'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/MetaData'
    title: AccountBalancesResponseEnvelope
  AccountData:
    type: object
    required:
      - identification
      - schemeName
    properties:
      identification:
        type: string
        description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        minLength: 1
        maxLength: 34
      name:
        type: string
        description: 'Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account. Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner''s identity and the account number.'
        minLength: 1
        maxLength: 70
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
      secondaryIdentification:
        type: string
        description: 'This is secondary identification of the account, as assigned by the account servicing institution.  This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).'
        minLength: 1
        maxLength: 34
    title: AccountData
    description: Provides the details to identify an account.
  AccountRequest:
    type: object
    required:
      - merchantPostAuthUrl
      - permissions
    properties:
      expirationDateTime:
        type: string
        format: date-time
        description: 'Specified date and time the permissions will expire. If this is not populated, the permissions will be open ended. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      merchantPostAuthUrl:
        type: string
        description: the merchant url to hit post authorization step
        minLength: 1
        maxLength: 2147483647
      permissions:
        type: array
        description: 'Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.'
        items:
          type: string
      transactionFromDateTime:
        type: string
        format: date-time
        description: 'Specified start date and time for the transaction query period. If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      transactionToDateTime:
        type: string
        format: date-time
        description: 'Specified end date and time for the transaction query period. If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
    title: AccountRequest
  AccountRequestResponse:
    type: object
    required:
      - creationDateTime
      - permissions
      - uri
    properties:
      accountRequestId:
        type: string
        description: The account request id that identifies the request at the bank.
      accountRequestReference:
        type: string
        description: The account request reference for the merchant to check on an account request.
      accountRequestStatus:
        type: string
        description: The account request status.
        enum:
          - Authorised
          - AwaitingAuthorisation
          - Rejected
          - Revoked
          - Error
      aspspAuthUrl:
        type: string
        description: The ASPSP url to redirect the PSU to for authorization of account access.
      creationDateTime:
        type: string
        format: date-time
        description: 'Date and time at which the resource was created.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      expirationDateTime:
        type: string
        format: date-time
        description: 'Specified date and time the permissions will expire. If this is not populated, the permissions will be open ended.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      permissions:
        type: array
        description: 'Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.'
        items:
          type: string
          enum:
            - ReadAccountsBasic
            - ReadAccountsDetail
            - ReadBalances
            - ReadBeneficiariesBasic
            - ReadBeneficiariesDetail
            - ReadDirectDebits
            - ReadProducts
            - ReadStandingOrdersBasic
            - ReadStandingOrdersDetail
            - ReadTransactionsBasic
            - ReadTransactionsCredits
            - ReadTransactionsDebits
            - ReadTransactionsDetail
      transactionFromDateTime:
        type: string
        format: date-time
        description: 'Specified start date and time for the transaction query period. If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      transactionToDateTime:
        type: string
        format: date-time
        description: 'Specified end date and time for the transaction query period. If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      uri:
        type: string
        description: Uri of the account-request resource.
    title: AccountRequestResponse
  AccountRequestResponseEnvelope:
    type: object
    required:
      - data
      - uri
    properties:
      uri:
        type: string
        description: Holds queried resource uri.
      data:
        $ref: '#/definitions/AccountRequestResponse'
    title: AccountRequestResponseEnvelope
  AccountTransactionsResponseEnvelope:
    type: object
    required:
      - data
      - links
      - meta
      - uri
    properties:
      uri:
        type: string
        description: Uri of the queried resource.
      data:
        type: array
        description: Transactions collection
        items:
          $ref: '#/definitions/Transaction'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/MetaData'
    title: AccountTransactionsResponseEnvelope
  AccountsResponseEnvelope:
    type: object
    required:
      - data
      - links
      - meta
      - uri
    properties:
      uri:
        type: string
        description: Uri of the queried resource.
      data:
        type: array
        description: Accounts collection
        items:
          $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/MetaData'
    title: AccountsResponseEnvelope
  Amount:
    type: object
    required:
      - amount
      - currency
    properties:
      amount:
        type: string
        pattern: '^\d{1,13}\.\d{1,5}$'
      currency:
        type: string
        description: 'A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 - Codes for the representation of currencies and funds.'
        pattern: '^[A-Z]{3,3}$'
    title: Amount
  Balance:
    type: object
    required:
      - accountId
      - creditDebitIndicator
      - dateTime
      - type
    properties:
      accountId:
        type: string
        description: A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
      amount:
        description: Amount of money of the cash balance.
        $ref: '#/definitions/Amount'
      creditDebitIndicator:
        type: string
        description: 'Indicates whether the balance is a credit or a debit balance. Usage: A zero balance is considered to be a credit balance.'
        enum:
          - Credit
          - Debit
      creditLine:
        type: array
        description: Set of elements used to provide details on the credit line.
        items:
          $ref: '#/definitions/CreditLine'
      dateTime:
        type: string
        format: date-time
        description: 'Indicates the date (and time) of the balance. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      type:
        type: string
        description: 'Balance type, in a coded form.'
        enum:
          - ClosingAvailable
          - ClosingBooked
          - Expected
          - ForwardAvailable
          - Information
          - InterimAvailable
          - InterimBooked
          - OpeningAvailable
          - OpeningBooked
          - PreviouslyClosedBooked
    title: Balance
    description: Balance
  Bank:
    type: object
    required:
      - connectionType
      - id
      - logo
      - name
      - uri
    properties:
      id:
        type: string
        description: The Banks Id
      uri:
        type: string
        description: Uri to Bank Resource
      name:
        type: string
        description: The Banks Name
      logo:
        type: string
        description: The Banks Logo http location
      connectionType:
        type: string
        description: The TPP/Bank Connection Type
        enum:
          - DIRECT
          - UKOPENBANKING
          - PSD2
    title: Bank
  BankTransactionCode:
    type: object
    required:
      - code
      - subCode
    properties:
      code:
        type: string
        description: Specifies the family within a domain.
      subCode:
        type: string
        description: Specifies the sub-product family within a specific family.
    title: BankTransactionCode
    description: Set of elements used to fully identify the type of underlying transaction resulting in an entry.
  BanksResponse:
    type: object
    required:
      - data
      - uri
    properties:
      uri:
        type: string
        description: Holds queried resource uri.
      data:
        type: array
        description: Banks collection
        items:
          $ref: '#/definitions/Bank'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/MetaData'
    title: BanksResponse
  CreditLine:
    type: object
    required:
      - included
    properties:
      amount:
        description: Amount of money of the credit line.
        $ref: '#/definitions/Amount'
      included:
        type: boolean
        description: 'Indicates whether or not the credit line is included in the balance of the account. Usage: If not present, credit line is not included in the balance amount of the account.'
      type:
        type: string
        description: 'Limit type, in a coded form.'
        enum:
          - Pre-Agreed
          - Emergency
          - Temporary
    title: CreditLine
    description: CreditLine
  CreditorAccount:
    type: object
    required:
      - identification
      - name
      - schemeName
    properties:
      identification:
        type: string
        description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        minLength: 0
        maxLength: 34
      name:
        type: string
        description: 'Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account. Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner’s identity and the account number. ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.'
        minLength: 0
        maxLength: 70
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
      secondaryIdentification:
        type: string
        description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        minLength: 1
        maxLength: 34
    title: CreditorAccount
    description: Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
  CreditorAgent:
    type: object
    properties:
      identification:
        type: string
        description: When creditorAccount schemeName = IBAN this field should be populated with the BIC of the FI.
        minLength: 1
        maxLength: 35
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
    title: CreditorAgent
    description: Identification of the financial institution servicing the creditor account.
  DebtorAccount:
    type: object
    required:
      - identification
      - schemeName
    properties:
      identification:
        type: string
        description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        minLength: 0
        maxLength: 34
      name:
        type: string
        description: 'Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account. Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner’s identity and the account number.'
        minLength: 1
        maxLength: 70
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
      secondaryIdentification:
        type: string
        description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        minLength: 1
        maxLength: 34
    title: DebtorAccount
    description: Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
  DebtorAgent:
    type: object
    properties:
      identification:
        type: string
        description: When debtorAccount schemeName = IBAN this field should be populated with the BIC of the FI. Else not populated.
        minLength: 1
        maxLength: 35
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
    title: DebtorAgent
    description: Identification of the financial institution servicing the debtor account.
  DeliveryAddress:
    type: object
    required:
      - country
      - townName
    properties:
      addressLine:
        type: array
        description: 'Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.'
        items:
          type: string
      buildingNumber:
        type: string
        description: Number that identifies the position of a building on a street.
        minLength: 1
        maxLength: 16
      country:
        type: string
        description: 'Nation with its own government, occupying a particular territory.'
        pattern: '^[A-Z]{2,2}$'
      countrySubDivision:
        type: array
        description: 'Identifies a subdivision of a country, for instance state, region, county.'
        items:
          type: string
      postCode:
        type: string
        description: Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
        minLength: 1
        maxLength: 16
      streetName:
        type: string
        description: Name of a street or thoroughfare.
        minLength: 1
        maxLength: 70
      townName:
        type: string
        description: 'Name of a built-up area, with defined boundaries, and a local government.'
        minLength: 0
        maxLength: 35
    title: DeliveryAddress
    description: 'Information that locates and identifies a specific address, as defined by postal services or in free format text.'
  ErrorDetailsItem:
    type: object
    properties:
      code:
        type: string
        description: Error code
      description:
        type: string
        description: Error description
      field:
        type: string
        description: JSON path to request object property the error is related to
    title: ErrorDetailsItem
  ErrorResponse:
    type: object
    properties:
      details:
        type: array
        description: Holds list of input validation errors
        items:
          $ref: '#/definitions/ErrorDetailsItem'
      returnCode:
        type: string
        description: Error type code
      returnDescription:
        type: string
        description: Error type description
    title: ErrorResponse
  InstructedAmount:
    type: object
    required:
      - amount
      - currency
    properties:
      amount:
        type: string
        pattern: '^\d{1,13}\.\d{1,5}$'
      currency:
        type: string
        description: 'A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 - Codes for the representation of currencies and funds.'
        pattern: '^[A-Z]{3,3}$'
    title: InstructedAmount
    description: 'Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. Usage: This amount has to be transported unchanged through the transaction chain.'
  Links:
    type: object
    required:
      - self
    properties:
      first:
        type: string
      last:
        type: string
      next:
        type: string
      prev:
        type: string
      self:
        type: string
    title: Links
    description: Links relevant to the payload
  MerchantDetails:
    type: object
    properties:
      merchantCategoryCode:
        type: string
        description: 'Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.'
        minLength: 3
        maxLength: 4
      merchantName:
        type: string
        description: Name by which the merchant is known.
        minLength: 1
        maxLength: 350
    title: MerchantDetails
    description: Details of the merchant involved in the transaction.
  MetaData:
    type: object
    properties:
      firstAvailableDateTime:
        type: string
        format: date-time
        description: 'All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      lastAvailableDateTime:
        type: string
        format: date-time
        description: 'All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      totalPages:
        type: integer
        format: int32
    title: MetaData
    description: Meta Data relevant to the payload
  PaymentInitiationRequest:
    type: object
    required:
      - creditorAccount
      - endToEndIdentification
      - instructedAmount
      - merchantPostAuthUrl
    properties:
      creditorAccount:
        $ref: '#/definitions/CreditorAccount'
      creditorAgent:
        $ref: '#/definitions/CreditorAgent'
      debtorAccount:
        $ref: '#/definitions/DebtorAccount'
      debtorAgent:
        $ref: '#/definitions/DebtorAgent'
      endToEndIdentification:
        type: string
        description: Unique identification assigned by the initiating party to unambiguously identify the transaction.
        minLength: 0
        maxLength: 35
      instructedAmount:
        $ref: '#/definitions/InstructedAmount'
      merchantPostAuthUrl:
        type: string
        description: The merchant url to hit post authorization step.
        minLength: 1
        maxLength: 2147483647
      remittanceInformation:
        $ref: '#/definitions/RemittanceInformation'
      risk:
        $ref: '#/definitions/Risk'
    title: PaymentInitiationRequest
  PaymentRequest:
    type: object
    required:
      - amount
      - countryCode
      - currency
      - reference
    properties:
      amount:
        type: string
        description: amount
        pattern: '^\d{1,13}\.\d{1,5}$'
      countryCode:
        type: string
        description: countryCode - ISO country code - indicates where customer is domiciled (ISO 3166 Alpha-2)
        pattern: '^[A-Z]{2}$'
      currency:
        type: string
        description: transaction currency
      email:
        type: string
        description: Email address where payment status notifications will be sent to
        minLength: 0
        maxLength: 254
        pattern: .*@.*
      language:
        type: string
        description: 'the customers preferred language, defaults to en ISO 639-1: two-letter codes, one per language'
        pattern: '^[a-z]{2}$'
      reference:
        type: string
        description: Reference - a reference that can be used by our customers to link their system with Nuapay.
        minLength: 1
        maxLength: 35
    title: PaymentRequest
    example:
      amount: '99.99'
      currency: GBP
      reference: reference
      countryCode: GB
      language: en
      email: client@example.com
  PaymentRequestResponse:
    type: object
    required:
      - aspspAuthUrl
      - creationDateTime
      - creditorAccount
      - endToEndIdentification
      - instructedAmount
      - instructionIdentification
      - paymentId
      - risk
      - tppPaymentReference
      - uri
    properties:
      uri:
        type: string
        description: Uri of the payments resource.
      tppPaymentReference:
        type: string
        description: The payment reference for the merchant to check on a payment request.
      aspspAuthUrl:
        type: string
        description: The ASPSP url to redirect the PSU to for authorization of payment.
      creationDateTime:
        type: string
        format: date-time
        description: Date and time at which the resource was created.
      creditorAccount:
        description: Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
        $ref: '#/definitions/CreditorAccount'
      creditorAgent:
        description: Identification of the financial institution servicing the creditor account.
        $ref: '#/definitions/CreditorAgent'
      debtorAccount:
        description: Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
        $ref: '#/definitions/DebtorAccount'
      debtorAgent:
        description: Identification of the financial institution servicing the debtor account.
        $ref: '#/definitions/DebtorAgent'
      instructionIdentification:
        type: string
        description: Unique identification as assigned by an instructing party.
      endToEndIdentification:
        type: string
        description: Unique identification assigned by the initiating party.
      instructedAmount:
        description: 'Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. Usage: This amount has to be transported unchanged through the transaction chain.'
        $ref: '#/definitions/InstructedAmount'
      remittanceInformation:
        description: 'Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts’ receivable system.'
        $ref: '#/definitions/RemittanceInformation'
      paymentId:
        type: string
        description: The payment id for the PSU to use when redirected to bank AUTH login.
      paymentSubmissionId:
        type: string
        description: Unique identification as assigned by the ASPSP to uniquely identify the payment submission resource.
      authorizationStatus:
        type: string
        description: payment authorization status of interest to the merchant using the server
      paymentStatus:
        type: string
        description: payment status of interest to the merchant using the server
      risk:
        description: Risk
        $ref: '#/definitions/Risk'
    title: PaymentRequestResponse
  PaymentRequestResponseEnvelope:
    type: object
    required:
      - data
      - uri
    properties:
      uri:
        type: string
        description: Uri of the queried resource.
      data:
        $ref: '#/definitions/PaymentRequestResponse'
    title: PaymentRequestResponseEnvelope
  PaymentResponse:
    type: object
    required:
      - amount
      - countryCode
      - currency
      - id
      - reference
      - status
    properties:
      amount:
        type: string
        description: amount
      countryCode:
        type: string
        description: countryCode - ISO country code - indicates where customer is domiciled (ISO 3166 Alpha-2)
      currency:
        type: string
        description: transaction currency
        enum:
          - GBP
      email:
        type: string
        description: Email address where payment status notifications will be sent to
      id:
        type: string
        description: 'id, this is used to get updates on the payment'
      language:
        type: string
        description: 'the customers preferred language, defaults to en ISO 639-1: two-letter codes, one per language'
      reference:
        type: string
        description: 'reference, matches that reference passed in the payment request'
      status:
        type: string
        description: 'paymentStatus, the latest payment status'
        enum:
          - PENDING_APPROVAL
          - REJECTED
          - IN_PROGRESS
          - COMPLETE
          - RECEIVED
          - REVERSED
    title: PaymentResponse
  PaymentResponseEnvelope:
    type: object
    required:
      - data
      - uri
    properties:
      data:
        description: PaymentResponse
        $ref: '#/definitions/PaymentResponse'
      uri:
        type: string
        description: Holds resource uri.
    title: PaymentResponseEnvelope
    example:
      uri: /payments/ybo8zayk2q
      data:
        id: ybo8zayk2q
        reference: reference
        status: PENDING_APPROVAL
        amount: '99.99'
        currency: GBP
        countryCode: GB
        language: en
        email: client@example.com
  ProprietaryBankTransactionCode:
    type: object
    required:
      - code
    properties:
      code:
        type: string
        description: Proprietary bank transaction code to identify the underlying transaction.
        minLength: 1
        maxLength: 35
      issuer:
        type: string
        description: Identification of the issuer of the proprietary bank transaction code.
        minLength: 1
        maxLength: 35
    title: ProprietaryBankTransactionCode
    description: Set of elements to fully identify a proprietary bank transaction code.
  RemittanceInformation:
    type: object
    properties:
      reference:
        type: string
        description: 'Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor’s reference or payment remittance identification should be quoted in the end-to-end transaction identification. OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.'
        minLength: 1
        maxLength: 35
      unstructured:
        type: string
        description: 'Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts’ receivable system, in an unstructured form.'
        minLength: 1
        maxLength: 140
    title: RemittanceInformation
    description: 'Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts’ receivable system.'
  Risk:
    type: object
    properties:
      deliveryAddress:
        $ref: '#/definitions/DeliveryAddress'
      merchantCategoryCode:
        type: string
        description: 'Category code conforms to ISO 18245, related to the type of services or goods the merchant provides for the transaction.'
        minLength: 3
        maxLength: 4
      merchantCustomerIdentification:
        type: string
        description: The unique customer identifier of the PSU with the merchant.
        minLength: 1
        maxLength: 70
      paymentContextCode:
        type: string
        description: Specifies the payment context.
    title: Risk
    description: Risk
  Servicer:
    type: object
    required:
      - identification
      - schemeName
    properties:
      identification:
        type: string
        description: Unique and unambiguous identification of the servicing institution.
        minLength: 1
        maxLength: 35
      schemeName:
        type: string
        description: 'Name of the identification scheme, in a coded form as published in an external list.'
    title: Servicer
    description: 'Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.'
  Transaction:
    type: object
    required:
      - accountId
      - bookingDateTime
      - creditDebitIndicator
      - transactionStatus
    properties:
      accountId:
        type: string
        description: A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
        minLength: 1
        maxLength: 40
      addressLine:
        type: string
        description: 'Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.'
        minLength: 1
        maxLength: 70
      amount:
        $ref: '#/definitions/Amount'
      balance:
        $ref: '#/definitions/Balance'
      bankTransactionCode:
        $ref: '#/definitions/BankTransactionCode'
      bookingDateTime:
        type: string
        format: date-time
        description: 'Date and time when a transaction entry is posted to an account on the account servicer''s books. Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
      creditDebitIndicator:
        type: string
        description: Indicates whether the transaction is a credit or a debit entry.
        enum:
          - Credit
          - Debit
      merchantDetails:
        $ref: '#/definitions/MerchantDetails'
      proprietaryBankTransactionCode:
        $ref: '#/definitions/ProprietaryBankTransactionCode'
      transactionId:
        type: string
        description: Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.
        minLength: 1
        maxLength: 40
      transactionInformation:
        type: string
        description: 'Further details of the transaction. This is the transaction narrative, which is unstructured text.'
        minLength: 1
        maxLength: 500
      transactionReference:
        type: string
        description: 'Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.'
        minLength: 1
        maxLength: 35
      transactionStatus:
        type: string
        description: Status of a transaction entry on the books of the account.
        enum:
          - BOOKED
          - PENDING
      valueDateTime:
        type: string
        format: date-time
        description: 'Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit entry.  Usage: If entry status is pending and value date is present, then the value date refers to an expected/requested value date. For entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the  number of availability days.  All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
    title: Transaction
    description: Transaction
